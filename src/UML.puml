@startuml
' Clases modelo
class Jugador {
  - int id
  - String nombre
  - String apellido
  - String fechaNacimiento
  - String correo
  - String foto
  - int equipoID
  + getters/setters
}

class Equipo {
  - int id
  - String nombre
  - int categoriaID
  + getters/setters
}

class Categoria {
  - int id
  - String nombre
  - int restriccionEdadMin
  - int restriccionEdadMax
  - int ligaID
  + getters/setters
}

class Liga {
  - int id
  - String nombre
  - int a√±o
  + getters/setters
}

' Clases DAO
class JugadorDAO {
  + registrarJugador(j: Jugador): void
  + listarJugadoresPorEquipo(equipoID: int): List<Jugador>
  + obtenerJugadorPorID(id: int): Jugador
  + actualizarJugador(j: Jugador): void
  + eliminarJugador(id: int): boolean
  + buscarJugadoresPorNombre(nombre: String): List<Jugador>
}

class EquipoDAO {
  + registrarEquipo(e: Equipo): void
  + listarEquiposPorCategoria(categoriaID: int): List<Equipo>
}

class CategoriaDAO {
  + registrarCategoria(c: Categoria): void
  + listarCategoriasPorLiga(ligaID: int): List<Categoria>
}

class LigaDAO {
  + registrarLiga(l: Liga): void
  + listarLigas(): List<Liga>
}

' Clase principal
class Main {
  + main(args: String[]): void
}

class ConsolePrinter {
  + imprimirJugador(j: Jugador): void
  + imprimirJugadores(lista: List<Jugador>): void
  + imprimirEquipos(lista: List<Equipo>): void
  + imprimirCategorias(lista: List<Categoria>): void
  + imprimirLigas(lista: List<Liga>): void
}

class estadisticas {

}
' Relaciones
Jugador "1" --> "1" Equipo : equipoID
Equipo "1" --> "1" Categoria : categoriaID
Categoria "1" --> "1" Liga : ligaID

Main --> JugadorDAO
Main --> EquipoDAO
Main --> CategoriaDAO
Main --> LigaDAO
Main --> ConsolePrinter

JugadorDAO --> Jugador
EquipoDAO --> Equipo
CategoriaDAO --> Categoria
LigaDAO --> Liga
Jugador "1" --> "1" Equipo : pertenece >

@enduml


